<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Tutorials|Introduction">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="16x16" href="../../Skins/Favicons/favicon-16x16.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Tutorial - OMS and State Machines - Spryker Commerce OS | Spryker</title>
        <!-- Google Tag Manager -->
        <script>/* <![CDATA[ */(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtDm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
		})(window,document,'script','dataLayer','GTM-NP24S2');/* ]]> */</script>
        <!-- End Google Tag Manager -->
        <script>/* <![CDATA[ */
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.src = "https://www.googletagmanager.com/gtag/js?id==UA-56589105-4";
			document.getElementsByTagName('head').item(0).appendChild(s);
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			gtag('config', 'UA-56589105-4');
		/* ]]> */</script>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/perfect-scrollbar.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/prism.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.expand-all-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/expand.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.collapse-all-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/collapse.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../resources/scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/mainstyles.css" rel="stylesheet" />
        <script src="../../resources/scripts/custom.modernizr.js">
        </script>
        <script src="../../resources/scripts/jquery.min.js">
        </script>
        <script src="../../resources/scripts/require.min.js">
        </script>
        <script src="../../resources/scripts/require.config.js">
        </script>
        <script src="../../resources/scripts/foundation.6.2.3_custom.js">
        </script>
        <script src="../../resources/scripts/plugins.min.js">
        </script>
        <script src="../../resources/scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="small" data-mc-ignore="true">
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <button class="menu-icon" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="../../home.htm" alt="Logo"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="3" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" placeholder="Search the Academy" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <section class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <div class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </div>
                            <div class="body-container" data-mc-content-body="True">
                                <!-- Google Tag Manager (noscript) -->
                                <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NP24S2" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                </noscript>
                                <!-- End Google Tag Manager (noscript) -->
                                <div class="search-container">
                                    <form class="search" action="#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchTopics mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="row collapse">
                                    <div class="top-bar">
                                        <div class="breadcrumbs-block">
                                            <div class="nocontent">
                                                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                        </div>
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie _Skins_SearchHome mc-component">
                                                <input class="search-field needs-pie" type="search" placeholder="Search" />
                                                <div class="search-filter-wrapper">
                                                    <div class="search-filter">
                                                        <div class="search-filter-content">
                                                            <ul>
                                                                <li>All Files</li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search">
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="topic-layout">
                                        <div>
                                            <div class="side-menu">
                                                <div data-sticky-container="" id="VFguMCFPNE6m4pABw_47HQ">
                                                    <div class="sticky sticky-menu" style="width:100%" data-sticky="" data-top-anchor="VFguMCFPNE6m4pABw_47HQ:top" data-bottom-anchor="contentBody:bottom" data-sticky-on="small" data-scroll-container-on="small">
                                                        <ul class="nocontent menu _Skins_SideMenu mc-component" data-mc-is-context-sensitive="True" data-mc-linked-toc="Data/Tocs/master.js" data-mc-side-menu="True" data-mc-max-depth="1" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="side-menu">
                                                <div class="toolbar-wrapper">
                                                    <div class="widget-github js-widget-github"><a class="widget-github-link js-widget-github-link" href="https://github.com/spryker/spryker-documentation" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 26 26"><path d="M13.5 0C6.057 0 0 6.057 0 13.5c0 5.888 3.791 10.905 9.058 12.745a.463.463 0 0 0 .258.088c1.316.43 2.724.667 4.184.667C20.943 27 27 20.943 27 13.5S20.943 0 13.5 0zm0 .931c6.93 0 12.569 5.639 12.569 12.569 0 5.428-3.459 10.061-8.287 11.818a1.903 1.903 0 0 1-.092-.527v-2.446c0-.975-.477-2.037-.946-2.75 2.584-.436 5.537-1.776 5.537-6.779 0-1.37-.429-2.58-1.275-3.598.186-.611.415-1.9-.225-3.52a.47.47 0 0 0-.291-.272c-.13-.04-1.326-.35-3.806 1.277a12.921 12.921 0 0 0-6.36 0c-2.481-1.63-3.68-1.319-3.809-1.277a.47.47 0 0 0-.29.273C5.582 7.319 5.811 8.607 6 9.218c-.85 1.018-1.279 2.227-1.279 3.598 0 4.957 2.9 6.323 5.463 6.778-.322.407-.66.934-.81 1.47-.661.184-2.018.19-2.929-1.37-.032-.06-.829-1.475-2.4-1.584-.25.002-.882.042-1.035.525-.169.537.424.944.679 1.117l.058.034c.029.015.707.371 1.213 1.644.105.333 1.03 2.84 4.353 2.399.002.367 0 .552-.004.7v.26c0 .15-.045.378-.096.525C4.386 23.558.931 18.924.931 13.5.931 6.57 6.57.931 13.5.931zm6.51 5.375c.5 1.471.158 2.537.035 2.839a.468.468 0 0 0 .089.49c.805.883 1.214 1.952 1.214 3.181 0 4.72-2.796 5.666-5.535 5.97a.464.464 0 0 0-.253.815c.368.314 1.199 1.68 1.199 2.744v2.446c0 .009.001.414.134.809a12.513 12.513 0 0 1-6.792-.002c.135-.396.139-.802.139-.81l.001-.248c.002-.211.006-.497 0-1.266a.473.473 0 0 0-.174-.362.47.47 0 0 0-.391-.09c-3.126.681-3.802-1.576-3.828-1.67l-.016-.047c-.448-1.135-1.037-1.713-1.388-1.975.759.267 1.182 1.007 1.193 1.024 1.231 2.107 3.264 2.162 4.328 1.685a.463.463 0 0 0 .27-.36c.095-.665.826-1.545 1.196-1.87a.464.464 0 0 0 .136-.488.461.461 0 0 0-.39-.324c-2.73-.31-5.524-1.266-5.524-5.98 0-1.228.41-2.3 1.219-3.181a.464.464 0 0 0 .087-.491c-.124-.302-.467-1.364.031-2.837.396.013 1.362.182 2.988 1.286.112.076.256.1.387.063.973-.27 2.058-.416 3.135-.421 1.08.005 2.166.15 3.14.421.131.037.273.013.386-.063 1.635-1.11 2.6-1.275 2.984-1.288z" /></svg></a>
                                                    </div>
                                                    <div class="buttons popup-container clearfix topicToolbarProxy _Skins_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: PreviousTopic NextTopic Print ExpandAll CollapseAll;">
                                                        <div class="button-group-container-left">
                                                            <button class="button needs-pie previous-topic-button" title="Navigate previous">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                                                            </button>
                                                            <button class="button needs-pie next-topic-button" title="Navigate next">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                                                            </button>
                                                            <button class="button needs-pie print-button" title="Print">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="print" />
                                                            </button>
                                                            <button class="button needs-pie expand-all-button" data-state1-class="expand-all-button" data-state2-class="collapse-all-button" data-state2-title="Collapse all" title="Expand all" data-state1-title="Expand all">
                                                                <img src="../../Skins/Default/Stylesheets/Images/transparent.gif" alt="expand all" />
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="js-anchorer main-content">
                                                    <h1>Tutorial - OMS and State Machines - Spryker Commerce OS</h1>
                                                    <p class="info">This tutorial is also available on the Spryker Training web-site. For more information and hands-on exercises, visit the <a href="https://training.spryker.com/courses/developer-bootcamp">Spryker Training</a> web-site.</p>
                                                    <h2>Challenge Description</h2>
                                                    <p>In this task you will create a full order management process (OMS) using the Spryker state machine and then use it in your shop.</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />1. Create the State Machine Skeleton</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>In this order process, you will use the following states: <i>new</i>, <i>paid</i>, <i>shipped</i>, <i>returned</i>, <i>refunded</i>, <i>unauthorized</i> and <i>closed</i>.</p>
                                                            <p>You will build all the transitions and events between these states as well. The skeleton of Spryker state machines is simply an XML file.</p>
                                                            <ol>
                                                                <li value="1">Create a new XML file in <i>config/Zed/oms</i> and call it <b>Demo01.xml</b>.</li>
                                                                <li value="2">Add the <b>Demo01</b> state machine process schema as following:</li>
                                                                <p><pre><code class="language-PHP line-numbers">
&lt;?xml version="1.0"?&gt;
&lt;statemachine
	xmlns="spryker:oms-01"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="spryker:oms-01 http://static.spryker.com/oms-01.xsd"&gt;
	&lt;!-- Used as example XML for OMS implementation --&gt;
 
	&lt;process name="Demo01" main="true"&gt;
		&lt;states&gt;
		&lt;/states&gt;
 
		&lt;transitions&gt;
		&lt;/transitions&gt;
 
		&lt;events&gt;
		&lt;/events&gt;
	&lt;/process&gt;
&lt;/statemachine&gt;								
					</code></pre>
                                                                </p>
                                                                <li value="3">Activate the OMS process in <code class="language-PHP">config_default.php</code> in <i>config/shared</i> by adding the name of the process <i>Demo01</i> to the key <code>[OmsConstants::ACTIVE_PROCESSES]</code>.
					<p><pre><code class="language-PHP line-numbers">
$config[OmsConstants::ACTIVE_PROCESSES] = [
	'Demo01'
];
					</code></pre></p></li>
                                                                <li value="4">Now, let's go back to the skeleton XML and add the first state. Simply, add a state element with the name.
					<p><pre><code class="language-PHP line-numbers">
&lt;states&gt;
	&lt;state name="new" /&gt;
&lt;/states&gt;					
					</code></pre></p></li>
                                                                <li value="5">Check the state machine graph while building it.
					<ol><li value="1">Go to the <b>Maintenance → OMS</b> page in the Backend Office, you will see your state machine <b>Demo01</b>.</li><li value="2">Click on it and you will see the graph that represents your XML file. </li><p class="info">Whenever you change the skeleton in the XML file, refresh the page so see the new changes.</p></ol></li>
                                                                <li value="6">Add the rest of the states to the state machine. Refresh the state machine graph after adding them.
					<p><pre><code class="language-PHP line-numbers">
&lt;states&gt;
	&lt;state name="new" /&gt;
	&lt;state name="paid" /&gt;
	&lt;state name="unauthorized" /&gt;
	&lt;state name="shipped" /&gt;
	&lt;state name="returned" /&gt;
	&lt;state name="refunded" /&gt;
	&lt;state name="closed" /&gt;
&lt;/states&gt;					
					</code></pre></p></li>
                                                                <li value="7">The next step is to add the transitions with the statuses' events. 
					<p>Every transition has a source, a target, and an optional event. The source and target are simply state names, and the event is the name of the event defined in the events section.</p><p>Let's start with the first transition. Refresh after adding the transition and check the updated state machine.</p><p><pre><code class="language-PHP line-numbers">	
&lt;transitions&gt;
	&lt;transition happy="true" condition="Demo/IsAuthorized"&gt;
		&lt;source&gt;new&lt;/source&gt;
		&lt;target&gt;paid&lt;/target&gt;
	&lt;/transition&gt;
&lt;/transitions&gt;
					</code></pre></p></li>
                                                                <li value="8">Now, add the event in the events section and in the transition you already have. Refresh the graph afterwards.
					<p><pre><code class="language-PHP line-numbers">
&lt;transitions&gt;
   &lt;transition happy="true" condition="Demo/IsAuthorized"&gt;
        &lt;source&gt;new&lt;/source&gt;
        &lt;target&gt;paid&lt;/target&gt;
        &lt;event&gt;pay&lt;/event&gt;
    &lt;/transition&gt;
&lt;/transitions&gt;
 
&lt;events&gt;
    &lt;event name="pay" onEnter="true" /&gt;
&lt;/events&gt;					
					</code></pre></p></li>
                                                                <li value="9">Finally, add rest of the transitions and events:
					<p><pre><code class="language-PHP line-numbers">
&lt;transitions&gt;
	&lt;transition&gt;
		&lt;source&gt;new&lt;/source&gt;
		&lt;target&gt;paid&lt;/target&gt;
		&lt;event&gt;pay&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;new&lt;/source&gt;
		&lt;target&gt;unauthorized&lt;/target&gt;
		&lt;event&gt;pay&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;paid&lt;/source&gt;
		&lt;target&gt;shipped&lt;/target&gt;
		&lt;event&gt;ship&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;shipped&lt;/source&gt;
		&lt;target&gt;returned&lt;/target&gt;
		&lt;event&gt;return&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;returned&lt;/source&gt;
		&lt;target&gt;refunded&lt;/target&gt;
		&lt;event&gt;refund&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;shipped&lt;/source&gt;
		&lt;target&gt;closed&lt;/target&gt;
		&lt;event&gt;close&lt;/event&gt;
	&lt;/transition&gt;
 
	&lt;transition&gt;
		&lt;source&gt;refunded&lt;/source&gt;
		&lt;target&gt;closed&lt;/target&gt;
		&lt;event&gt;close after refund&lt;/event&gt;
	&lt;/transition&gt;
&lt;/transitions&gt;
 
&lt;events&gt;
	&lt;event name="pay" onEnter="true" /&gt;
	&lt;event name="ship" manual="true" /&gt;
	&lt;event name="return" manual="true" /&gt;
	&lt;event name="refund" onEnter="true" /&gt;
	&lt;event name="close" timeout="14 days" /&gt;
	&lt;event name="close after refund" onEnter="true" /&gt;
&lt;/events&gt;	
					</code></pre></p></li>
                                                            </ol>
                                                            <p class="info">The skeleton of the order process is now done. Refresh the graph and check your process.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />2. Add a Command and a Condition to the State Machine</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>Order process usually needs PHP implementations for certain functionalities like calling a payment provider or checking if a payment is authorized or not.</p>
                                                            <p>To do so, Spryker introduces <b>Commands</b> and <b>Conditions</b>:
				<ul><li value="1">Commands are used for any implementation of any functionality used in the process.</li><li value="2">Conditions are used to replace an if-then statement in your process.</li><p>They are both implemented in PHP and injected in the state machine skeleton.</p></ul></p>
                                                            <ol>
                                                                <li value="1">Add a dummy command to perform the payment. 
					<p class="info">In a real scenario, this command would call a payment provider to authorize the payment.</p><p>A command in the Spryker state machine is added to an event. So add the command <i>Pay</i> to the pay event.
					<pre><code>
&lt;event name="pay" onEnter="true" command="Demo/Pay" /&gt;
</code></pre></p><p class="info">Refresh the graph again. You will see that the command is added with the label <i>not implemented</i>. This means that the PHP implementation has not been hooked yet.</p></li>
                                                                <li value="2">The next step is to add the command and hook it into the skeleton. The command is simply a Spryker plugin connected to the OMS module. 
					<p class="info">For the demo, we will add the command plugin directly to the OMS module. In a real life scenario, you can include the plugin in any other module depending on your software design of your shop.</p><p>Add the command plugin in <code>src/Pyz/Zed/Oms/Communication/Plugin/Command/Demo</code> and call it <i>PayCommand</i>.</p><p>As the command is a plugin, it should implement some interface. The interface for the command here is <code>CommandByOrderInterface</code> which has the method <i>run();</i></p><p><pre><code class="language-PHP line-numbers">namespace Pyz\Zed\Oms\Communication\Plugin\Command\Demo;

use Orm\Zed\Sales\Persistence\SpySalesOrder;
use Spryker\Zed\Oms\Business\Util\ReadOnlyArrayObject;
use Spryker\Zed\Oms\Communication\Plugin\Oms\Command\AbstractCommand;
use Spryker\Zed\Oms\Dependency\Plugin\Command\CommandByOrderInterface;

class PayCommand extends AbstractCommand implements CommandByOrderInterface
{
	/**
	* {@inheritDoc}
	*
	* @api
	*
	* @param \Orm\Zed\Sales\Persistence\SpySalesOrderItem[] $orderItems
	* @param \Orm\Zed\Sales\Persistence\SpySalesOrder $orderEntity
	* @param \Spryker\Zed\Oms\Business\Util\ReadOnlyArrayObject $data
	*
	* @return array
	*/
	public function run(array $orderItems, SpySalesOrder $orderEntity, ReadOnlyArrayObject $data): array
	{
		return [];
	}
}
					</code></pre></p></li>
                                                                <li value="3">The next step is to hook the command to your state machine using the <code>OmsDependencyProvider</code>. 
						<p>In the <code>OmsDependencyProvider</code>, there is a method called <code>extendCommandPlugins()</code> which is called from <var>provideBusinessLayerDependencies()</var> one.</p><p>Add your new command to the command collection inside the container and use the same command name you have used in the XML skeleton like this:</p><p><pre><code class="language-PHP line-numbers">/**
* @param \Spryker\Zed\Kernel\Container $container
*
* @return \Spryker\Zed\Kernel\Container
*/
protected function extendCommandPlugins(Container $container): Container
{
	$container-&gt;extend(static::COMMAND_PLUGINS, function (CommandCollectionInterface $commandCollection): CommandCollectionInterface {
		...

		$commandCollection-&gt;add(new PayCommand(), 'Demo/Pay');


		return $commandCollection;
	});

	return $container;
}
					</code></pre></p><p class="info">Refresh the graph. You should not see the <i>not implemented</i> label anymore meaning that the state machine  recognizes the command.</p></li>
                                                                <li value="4">The next step is to add the condition in the same way but using the <code>ConditionInterface</code> interface for the plugin instead of the command one. The state machine engine recognizes where to move next using the event name. In this case, the transitions <i>paid-&gt;shipped</i> and <i>paid-&gt;unauthorized</i> should use the same event name with a condition on one of the transitions. 
					<p class="info">The machine then will examine the condition, if it returns 'true', then go to the 'shipped' state, otherwise go to 'unauthorized'.</p><p>The skeleton will look like this:
<pre><code class="language-PHP line-numbers">
&lt;transition condition="Demo/IsAuthorized"&gt;
	&lt;source&gt;new&lt;/source&gt;
	&lt;target&gt;paid&lt;/target&gt;
	&lt;event&gt;pay&lt;/event&gt;
&lt;/transition&gt;
 
&lt;transition&gt;
	&lt;source&gt;new&lt;/source&gt;
	&lt;target&gt;unauthorized&lt;/target&gt;
	&lt;event&gt;pay&lt;/event&gt;
&lt;/transition&gt;									
</code></pre></p><p>The condition plugin:
							<pre><code class="language-PHP line-numbers">namespace Pyz\Zed\Oms\Communication\Plugin\Condition\Demo;

use Orm\Zed\Sales\Persistence\SpySalesOrderItem;
use Spryker\Zed\Oms\Communication\Plugin\Oms\Condition\AbstractCondition;
use Spryker\Zed\Oms\Dependency\Plugin\Condition\ConditionInterface;

class IsAuthorizedCondition extends AbstractCondition implements ConditionInterface
{
	/**
	* @param \Orm\Zed\Sales\Persistence\SpySalesOrderItem $orderItem
	*
	* @return bool
	*/
	public function check(SpySalesOrderItem $orderItem): bool
	{
		return true;
	}
}						
</code></pre></p><p>And the <code>OmsDependencyProvider</code>:
<pre><code class="language-PHP line-numbers">		
/**
 * @param \Spryker\Zed\Kernel\Container $container
 *
 * @return \Spryker\Zed\Kernel\Container
 */
protected function extendConditionPlugins(Container $container): Container
{
	$container-&gt;extend(static::CONDITION_PLUGINS, function (ConditionCollectionInterface $conditionCollection): ConditionCollectionInterface {
		...
 
		$conditionCollection-&gt;add(new IsAuthorizedCondition(), 'Demo/IsAuthorized');
 
		return $conditionCollection;
	});
 
	return $container;
}</code></pre></p></li>
                                                            </ol>
                                                            <p class="info">The order process for your shop is done. Refresh the graph and check it out.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />3. Use the State Machine for Your Orders</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>The final step is to use the state machine by hooking it into the checkout.</p>
                                                            <p>To do so, open the configuration file <code>config/Shared/config_default.php</code> and make the invoice payment method use the <i>Demo01</i> process.
				<div class="code-toolbar"><pre class=" language-php line-numbers"><code class=" language-php">
<span class="token variable">$config</span><span class="token punctuation">[</span><span class="token scope">SalesConstants<span class="token punctuation">::</span></span><span class="token constant">PAYMENT_METHOD_STATEMACHINE_MAPPING</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token scope">DummyPaymentConfig<span class="token punctuation">::</span></span><span class="token constant">PAYMENT_METHOD_INVOICE</span><span class="token punctuation">]</span> <span class="token operator"> =</span><span class="token single-quoted-string string"> 'Demo01'</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
					<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span>
</span></code></pre></div></p>
                                                            <p>That's it! Your process should be working now.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />4. Test the State Machine</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>You have just built a new order process. To test it, do the following:</p>
                                                            <ol>
                                                                <li value="1">Go to the <a href="http://www.de.suite.local/">shop</a>, chose a product, add it to cart, and checkout using the Invoice payment method.</li>
                                                                <li value="2">Open the <a href="http://zed.de.demoshop.local/sales">orders page</a> in Zed UI and then open your order. 
                        <p class="info">This order is now applying the process you have defined in the state machine.</p></li>
                                                                <li value="3">You will notice that there is a button next to your order called <b>ship</b>, this one triggers the manual event ship.</li>
                                                                <li value="4">You can click on the last state name under the state column to see what the current state for a specific item is.
						<p class="info"> The current state has a yellowish background color.</p></li>
                                                                <li value="5">Click on ship to move the item into the next state.</li>
                                                                <li value="6">Click again on the last state name and check the current state.
						<p class="tip">You can keep moving the item until the order is closed.</p></li>
                                                            </ol>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="javascript:void(0);" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage"><img class="MCDropDown_Image_Icon" src="../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />Nice Addition</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>Along with the nice representation of the state machine as a graph, Spryker provides a flag called <b>happy</b>.</p>
                                                            <p>This flag adds green arrows on the transitions in order to define the happy path of an order item.</p>
                                                            <p>To add this flag, just write <code>happy = "true"</code> on the transitions that are part of your process happy path and refresh the graph.</p>
                                                        </div>
                                                    </div>
                                                    <p>&#160;</p>
                                                    <p>&#160;</p>
                                                    <p><i>Last review date: Jul 11, 2019 </i>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div><a class="scroll-top js-scroll-top" href="#"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill="#FFF" fill-rule="nonzero" d="M11.82 5.22a.54.54 0 0 1 0 .806.636.636 0 0 1-.852 0L6.607 1.937v13.49a.587.587 0 0 1-.602.573c-.336 0-.611-.258-.611-.573V1.937L1.04 6.026a.647.647 0 0 1-.86 0 .54.54 0 0 1 0-.807L5.573.163a.636.636 0 0 1 .852 0L11.82 5.22z" /></svg></a>
                                <script>/* <![CDATA[ */
			function createGithubUrl() {
			var GITHUB_CONTENT_PATH = '/blob/master/public';
			var link = document.querySelector('.js-widget-github-link');
			var href =
			link.getAttribute('href')
			+ GITHUB_CONTENT_PATH
			+ window.location.pathname;
			link.setAttribute('href', href);
			}
			createGithubUrl();
		/* ]]> */</script>
                                <script>/* <![CDATA[ */
			requirejs.config({
				appDir: '',
				paths: {
					'clipboard': ['https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min']
					
				}
			});
			require(['clipboard'], function(Clipboard) {
				console.log(Clipboard);
				window.Clipboard = Clipboard;
			});
		/* ]]> */</script>
                                <script src="../../resources/scripts/perfect-scrollbar.js">
                                </script>
                                <script src="../../resources/scripts/imagemapster.js">
                                </script>
                                <script src="../../resources/scripts/script.js">
                                </script>
                                <script src="../../resources/scripts/prism.js">
                                </script>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
            <script>/* <![CDATA[ */$(document).foundation();/* ]]> */</script>
        </div>
    </body>
</html>
